package com.project1.command;

import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.bots.AbsSender;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

public class ConfirmHandler {

    private final AbsSender bot;

    // ‚úÖ Map l∆∞u danh s√°ch ng∆∞·ªùi d√πng ƒë√£ x√°c nh·∫≠n cho t·ª´ng bu·ªïi h·ªçc
    // Key: scheduleId (v√≠ d·ª• "SCH123456") ‚Üí Set of userId
    private final Map<String, Set<Long>> scheduleConfirmations = new HashMap<>();

    public ConfirmHandler(AbsSender bot) {
        this.bot = bot;
    }

    // üìå H√†m x·ª≠ l√Ω l·ªánh /confirm <scheduleId>
    public void handleConfirm(Message message) {
        Long chatId = message.getChatId();
        Long userId = message.getFrom().getId();
        String userName = message.getFrom().getFirstName();
        String text = message.getText().trim();

        String[] parts = text.split("\\s+");
        if (parts.length < 2) {
            send(chatId, "‚ùå Please use `/confirm <schedule_id>`\nExample: /confirm SCH123456");
            return;
        }

        String scheduleId = parts[1];

        scheduleConfirmations.putIfAbsent(scheduleId, new HashSet<>());

        if (scheduleConfirmations.get(scheduleId).contains(userId)) {
            send(chatId, "‚úÖ You have already confirmed schedule `" + scheduleId + "`.");
        } else {
            scheduleConfirmations.get(scheduleId).add(userId);
            send(chatId, "üìå " + userName + " has confirmed schedule `" + scheduleId + "`.");
        }

        // TODO: Ghi x√°c nh·∫≠n n√†y v√†o Airtable n·∫øu c·∫ßn
    }

    // ‚úÖ L·∫•y danh s√°ch ng∆∞·ªùi ƒë√£ x√°c nh·∫≠n cho 1 l·ªãch h·ªçc
    public Set<Long> getConfirmedUsers(String scheduleId) {
        return scheduleConfirmations.getOrDefault(scheduleId, Collections.emptySet());
    }

    private void send(Long chatId, String text) {
        try {
            SendMessage msg = new SendMessage(chatId.toString(), text);
            msg.enableMarkdown(true); // h·ªó tr·ª£ in ƒë·∫≠m v√† m√£ l·ªãch
            bot.execute(msg);
        } catch (TelegramApiException e) {
            System.err.println("‚ùå Error sending message: " + e.getMessage());
        }
    }
}
